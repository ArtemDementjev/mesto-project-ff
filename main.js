(()=>{"use strict";var __webpack_modules__={29:()=>{eval("\n;// CONCATENATED MODULE: ./src/scripts/api.js\nvar config = {\n  baseURL: 'https://nomoreparties.co/v1/wff-cohort-16/',\n  headers: {\n    authorization: '11d21809-1731-4190-b45a-c5d2098fc1b9',\n    'Content-Type': 'application/json'\n  }\n};\nfunction getResponseData(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n}\nfunction getAccountInfo() {\n  return fetch(\"\".concat(config.baseURL, \"users/me\"), {\n    method: \"GET\",\n    headers: config.headers\n  }).then(getResponseData);\n}\nfunction getInitialCards() {\n  return fetch(\"\".concat(config.baseURL, \"cards\"), {\n    method: \"GET\",\n    headers: config.headers\n  }).then(getResponseData);\n}\nfunction postCard(newPlaceName, newPlaceLink) {\n  return fetch(\"\".concat(config.baseURL, \"cards\"), {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: \"\".concat(newPlaceName.value),\n      link: \"\".concat(newPlaceLink.value)\n    })\n  }).then(getResponseData);\n}\nfunction patchAvatar(newLink) {\n  return fetch(\"\".concat(config.baseURL, \"users/me/avatar\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: \"\".concat(newLink)\n    })\n  }).then(getResponseData);\n}\nfunction patchProfileInfo(profileName, profileAbout) {\n  return fetch(\"\".concat(config.baseURL, \"users/me\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: \"\".concat(profileName),\n      about: \"\".concat(profileAbout)\n    })\n  }).then(getResponseData);\n}\nfunction deleteCardFromServer(cardID) {\n  return fetch(\"\".concat(config.baseURL, \"cards/\").concat(cardID), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(getResponseData);\n}\nfunction deleteLike(cardID) {\n  return fetch(\"\".concat(config.baseURL, \"cards/likes/\").concat(cardID), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(getResponseData);\n}\nfunction putLike(cardID) {\n  return fetch(\"\".concat(config.baseURL, \"cards/likes/\").concat(cardID), {\n    method: 'PUT',\n    headers: config.headers\n  }).then(getResponseData);\n}\n;// CONCATENATED MODULE: ./src/scripts/card.js\nvar cardFunctions = {\n  createCard: createCard,\n  deleteCard: deleteCard,\n  likeCard: likeCard\n};\n\nfunction createCard(cardTemplate, cardObject, functions, popupFunction, ownerId, openConfirmDeletePopup) {\n  var cardElement = getCardTemplate(cardTemplate);\n  var deleteButton = cardElement.querySelector('.card__delete-button');\n  var heartButton = cardElement.querySelector('.card__like-button');\n  var cardImage = cardElement.querySelector('.card__image');\n  var likesQuantity = cardElement.querySelector('.likes-quantity');\n  likesQuantity.innerText = cardObject.likes.length;\n  cardImage.setAttribute('src', cardObject.link);\n  cardImage.setAttribute('alt', cardObject.name);\n  cardElement.querySelector('.card__title').textContent = cardObject.name;\n  deleteButton.addEventListener('click', function (evt) {\n    var cardToDelete = {\n      card: cardElement,\n      id: cardObject._id\n    };\n    openConfirmDeletePopup(evt, cardToDelete);\n  });\n  heartButton.addEventListener('click', function () {\n    return functions.likeCard(heartButton, cardObject, likesQuantity);\n  });\n  cardImage.addEventListener('click', function (evt) {\n    return popupFunction(evt);\n  });\n  if (!(ownerId === cardObject.owner._id)) {\n    deleteButton.style.display = 'none';\n  }\n  if (cardObject.likes.some(function (object) {\n    return object._id === ownerId;\n  })) {\n    heartButton.classList.add('card__like-button_is-active');\n  }\n  // cardElement.setAttribute('id', cardObject._id);\n  return cardElement;\n}\n;\nfunction deleteCard(card, id) {\n  deleteCardFromServer(id).then(function () {\n    card.remove();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\n;\nfunction likeCard(heartButton, cardObject, likesQuantity) {\n  if (heartButton.classList.value.includes('card__like-button_is-active')) {\n    deleteLike(cardObject._id).then(function (result) {\n      heartButton.classList.toggle('card__like-button_is-active');\n      likesQuantity.innerText = result.likes.length;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } else {\n    putLike(cardObject._id).then(function (result) {\n      heartButton.classList.toggle('card__like-button_is-active');\n      likesQuantity.innerText = result.likes.length;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n}\n;\nfunction getCardTemplate(cardTemplate) {\n  return cardTemplate.querySelector('.places__item').cloneNode(true);\n}\n;\n;// CONCATENATED MODULE: ./src/scripts/modal.js\nfunction openModal(popupToOpen) {\n  popupToOpen.classList.add('popup_is-opened');\n  document.addEventListener('keydown', closeByEscape);\n  popupToOpen.addEventListener('mousedown', closeHandler);\n}\n;\nfunction closeByEscape(evt) {\n  if (evt.key === 'Escape') {\n    var popupOpened = document.querySelector('.popup_is-opened');\n    closeModal(popupOpened);\n  }\n}\n;\nfunction closeModal(popup) {\n  popup.classList.remove('popup_is-opened');\n  document.removeEventListener('keydown', closeByEscape);\n  document.removeEventListener('mousedown', closeHandler);\n}\n;\nfunction closeHandler(evt) {\n  if (evt.target.classList.contains('popup_is-opened')) {\n    closeModal(evt.target);\n  }\n  ;\n}\n;\n;// CONCATENATED MODULE: ./src/scripts/validation.js\nfunction showInputError(formElement, inputElement, errorMessage, settings) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.add(settings.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(settings.errorClass);\n}\n;\nfunction hideInputError(formElement, inputElement, settings) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.remove(settings.inputErrorClass);\n  errorElement.classList.remove(settings.errorClass);\n  errorElement.textContent = '';\n}\n;\nfunction checkInputValidity(formElement, inputElement, settings) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity('');\n  }\n  ;\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, settings);\n  } else {\n    hideInputError(formElement, inputElement, settings);\n  }\n  ;\n}\n;\nfunction hasInvalidInput(inputList) {\n  return inputList.some(function (element) {\n    return !element.validity.valid;\n  });\n}\n;\nfunction toggleButtonState(inputList, buttonElement, settings) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.classList.add(settings.inactiveButtonClass);\n  } else {\n    buttonElement.classList.remove(settings.inactiveButtonClass);\n  }\n  ;\n}\n;\nfunction setEventListeners(formElement, settings) {\n  var inputList = Array.from(formElement.querySelectorAll(settings.inputSelector));\n  var buttonElement = formElement.querySelector(settings.submitButtonSelector);\n  toggleButtonState(inputList, buttonElement, settings);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener('input', function () {\n      checkInputValidity(formElement, inputElement, settings);\n      toggleButtonState(inputList, buttonElement, settings);\n    });\n  });\n}\n;\nfunction enableValidation(settings) {\n  var formList = Array.from(document.querySelectorAll(settings.formSelector));\n  formList.forEach(function (formElement) {\n    setEventListeners(formElement, settings);\n  });\n}\n;\nfunction clearValidation(formElement, settings) {\n  var inputList = Array.from(formElement.querySelectorAll(settings.inputSelector));\n  var buttonElement = formElement.querySelector(settings.submitButtonSelector);\n  toggleButtonState(inputList, buttonElement, settings);\n  inputList.forEach(function (inputElement) {\n    hideInputError(formElement, inputElement, settings);\n  });\n}\n;// CONCATENATED MODULE: ./src/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\nvar cardTemplate = document.querySelector('#card-template').content;\nvar popupEditProfile = document.querySelector('.popup_type_edit');\nvar popupAddCard = document.querySelector('.popup_type_new-card');\nvar popupWithImage = document.querySelector('.popup_type_image');\nvar popupEditAvatar = document.querySelector('.popup_type_edit_image');\nvar popupConfirmDelete = document.querySelector('.popup_type_confirm_delete');\nvar buttonProfileEdit = document.querySelector('.profile__edit-button');\nvar buttonAddCard = document.querySelector('.profile__add-button');\nvar avatar = document.querySelector('.profile__image');\nvar crossButtons = Array.from(document.querySelectorAll('.popup__close'));\nvar formEditProfile = document.forms['edit-profile'];\nvar inputsEditProfile = {\n  name: formEditProfile['name'],\n  about: formEditProfile['description']\n};\nvar formConfirmDelete = document.forms['confirm-delete'];\nvar cardToDeleteGlobal = {};\nvar formEditAvatar = document.forms['edit-profile-image'];\nvar inputEditAvatar = formEditAvatar['avatar-edit'];\nvar validationSettings = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\nvar profileDataOnPage = {\n  name: document.querySelector('.profile__title'),\n  about: document.querySelector('.profile__description'),\n  avatar: document.querySelector('.profile__image')\n};\nvar formNewPlace = document.forms['new-place'];\nvar newPlaceName = formNewPlace['place-name'];\nvar newPlaceLink = formNewPlace['link'];\nvar popupImage = document.querySelector('.popup__image');\nvar popupCaption = document.querySelector('.popup__caption');\nvar container = document.querySelector('.places__list');\nfunction submitEditProfileForm(evt) {\n  evt.preventDefault();\n  evt.submitter.innerText = 'Сохранение...';\n  patchProfileInfo(inputsEditProfile.name.value, inputsEditProfile.about.value).then(function (result) {\n    profileDataOnPage.name.textContent = result.name;\n    profileDataOnPage.about.textContent = result.about;\n    closeModal(popupEditProfile);\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    evt.target.querySelector('.popup__button').innerText = 'Сохранить';\n  });\n}\n;\nfunction submitEditAvatarForm(evt) {\n  evt.preventDefault();\n  evt.submitter.innerText = 'Сохранение...';\n  patchAvatar(inputEditAvatar.value).then(function (result) {\n    profileDataOnPage.avatar.style.backgroundImage = \"url(\".concat(result.avatar, \")\");\n    closeModal(popupEditAvatar);\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    evt.target.querySelector('.popup__button').innerText = 'Сохранить';\n  });\n}\n;\nfunction submitConfirmDeleteForm(evt) {\n  evt.preventDefault();\n  // const cardToDelete = document.getElementById(`${evt.target.closest('.popup').id}`);\n  cardFunctions.deleteCard(cardToDeleteGlobal.card, cardToDeleteGlobal.id);\n  closeModal(popupConfirmDelete);\n}\nfunction openImagePopup(evt) {\n  openModal(popupWithImage);\n  popupImage.src = evt.target.src;\n  popupImage.alt = evt.target.alt;\n  popupCaption.innerText = evt.target.alt;\n}\n;\nfunction openConfirmDeletePopup(evt, cardToDelete) {\n  openModal(popupConfirmDelete);\n  // popupConfirmDelete.setAttribute('id', `${evt.target.closest('.card').id}`);\n  cardToDeleteGlobal.card = cardToDelete.card;\n  cardToDeleteGlobal.id = cardToDelete.id;\n}\n;\nenableValidation(validationSettings);\ncrossButtons.forEach(function (item) {\n  item.addEventListener('click', function (evt) {\n    closeModal(evt.target.closest('.popup'));\n  });\n});\nbuttonProfileEdit.addEventListener('click', function () {\n  openModal(popupEditProfile);\n  clearValidation(formEditProfile, validationSettings);\n  inputsEditProfile.name.value = profileDataOnPage.name.innerText;\n  inputsEditProfile.about.value = profileDataOnPage.about.innerText;\n});\nbuttonAddCard.addEventListener('click', function () {\n  formNewPlace.reset();\n  openModal(popupAddCard);\n  clearValidation(formNewPlace, validationSettings);\n});\navatar.addEventListener('click', function () {\n  openModal(popupEditAvatar);\n  clearValidation(inputEditAvatar, validationSettings);\n  formEditAvatar.reset();\n});\nformConfirmDelete.addEventListener('submit', submitConfirmDeleteForm);\nformEditProfile.addEventListener('submit', submitEditProfileForm);\nformEditAvatar.addEventListener('submit', submitEditAvatarForm);\nformNewPlace.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  evt.submitter.innerText = 'Создание...';\n  postCard(newPlaceName, newPlaceLink).then(function (result) {\n    container.prepend(cardFunctions.createCard(cardTemplate, result, cardFunctions, openImagePopup, result.owner._id, openConfirmDeletePopup));\n    closeModal(popupAddCard);\n  }).catch(function (err) {\n    return console.log(err);\n  });\n});\nPromise.all([getAccountInfo(), getInitialCards()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    accountInfo = _ref2[0],\n    cards = _ref2[1];\n  profileDataOnPage.name.textContent = accountInfo.name;\n  profileDataOnPage.about.textContent = accountInfo.about;\n  profileDataOnPage.avatar.style.backgroundImage = \"url(\".concat(accountInfo.avatar, \")\");\n  cards.forEach(function (item) {\n    container.append(cardFunctions.createCard(cardTemplate, item, cardFunctions, openImagePopup, accountInfo._id, openConfirmDeletePopup));\n  });\n}).catch(function (err) {\n  return console.log(err);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///29\n")}},__webpack_exports__={};__webpack_modules__[29]()})();